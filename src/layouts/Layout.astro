---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getLangFromUrl } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url);

interface Props {
  title: string;
}
const { title } = Astro.props;
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset='UTF-8' />
    <meta
      name='description'
      content='Générateur de mots de passe sécurisés et mémorisables'
    />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />

    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <Header />
    <slot />
    <Footer />
  </body>

  <script is:inline>
    // Script de gestion du mode sombre
    const savedTheme = localStorage.getItem('theme');
    const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)');

    function setTheme(theme) {
      const isDarkMode = theme === 'dark';
      document.documentElement.classList.toggle('dark-mode', isDarkMode);
      localStorage.setItem('theme', theme);
    }

    // Initialisation du thème au chargement
    setTheme(savedTheme || (prefersDarkMode.matches ? 'dark' : 'light'));

    // Écoute les changements de préférences système
    prefersDarkMode.addEventListener('change', e => {
      setTheme(e.matches ? 'dark' : 'light');
    });

    // Fonction globale pour basculer le thème
    window.toggleTheme = () => {
      const currentTheme = document.documentElement.classList.contains(
        'dark-mode'
      )
        ? 'dark'
        : 'light';
      setTheme(currentTheme === 'dark' ? 'light' : 'dark');
    };
  </script>

  <script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
      const savedTheme = localStorage.getItem('theme');
      const prefersDarkMode = window.matchMedia('(prefers-color-scheme: dark)');

      const htmlElement = document.documentElement;
      const toggleThemeButton = document.querySelector('.dark-mode-toggle');

      // Fonction pour appliquer un thème
      function applyTheme(theme) {
        htmlElement.classList.toggle('dark-mode', theme === 'dark');
        localStorage.setItem('theme', theme);

        // Mise à jour des icônes du bouton de bascule
        const moonIcon = toggleThemeButton?.querySelector('.moon-icon');
        const sunIcon = toggleThemeButton?.querySelector('.sun-icon');

        if (moonIcon && sunIcon) {
          moonIcon.style.display = theme === 'dark' ? 'none' : 'inline';
          sunIcon.style.display = theme === 'dark' ? 'inline' : 'none';
        }
      }

      // Initialisation du thème
      if (savedTheme) {
        applyTheme(savedTheme);
      } else {
        applyTheme(prefersDarkMode.matches ? 'dark' : 'light');
      }

      // Écoute des changements dans les préférences système
      prefersDarkMode.addEventListener('change', e => {
        applyTheme(e.matches ? 'dark' : 'light');
      });

      // Gestion du clic sur le bouton de bascule
      if (toggleThemeButton) {
        toggleThemeButton.addEventListener('click', () => {
          const currentTheme = htmlElement.classList.contains('dark-mode')
            ? 'dark'
            : 'light';
          applyTheme(currentTheme === 'dark' ? 'light' : 'dark');
        });
      }
    });
  </script>

  <style is:global>
    :root {
      /* Couleurs principales */
      --color-bg-primary: #f9f9f9;
      --color-bg-secondary: #ffffff;
      --color-text-primary: #333333;
      --color-text-secondary: #666666;
      --color-accent: #728adc;
      --color-accent-hover: #bdd5ff;
      --color-border-color: #e0e0e0;
      --color-bg-navbar: rgba(237, 237, 237, 0.7);

      /* Ombres */
      --shadow-soft: 0 4px 6px rgba(0, 0, 0, 0.1);
      --shadow-hover: 0 6px 12px rgba(0, 0, 0, 0.2);

      font-size: 18px; /* Base pour écrans normaux */

      @media (max-width: 1200px) {
        font-size: 17px;
      }

      @media (max-width: 992px) {
        font-size: 17px;
      }

      @media (max-width: 768px) {
        font-size: 15px;
      }

      @media (max-width: 576px) {
        font-size: 15px;
      }
    }

    :root.dark-mode {
      --color-bg-primary: #121212;
      --color-bg-secondary: #1e1e1e;
      --color-bg-dark: #000000;
      --color-text-primary: #ffffff;
      --color-text-secondary: #b0b0b0;
      --color-accent: #728adc;
      --color-accent-hover: #bdd5ff;
      --color-bg-navbar: rgba(50, 50, 50, 0.9);
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    /* Enregistrer notre famille de polices personnalisée et indiquer au navigateur où la trouver. */
    @font-face {
      font-family: 'Varela';
      src: url('/fonts/VarelaRound-Regular.ttf');
      font-weight: normal;
      font-style: normal;
      font-display: swap;
    }
    html {
      font-family: 'Varela', Arial, sans-serif;
      background: var(--color-bg-primary);
      color: var(--color-text-primary);
      font-size: 16px;
      overflow-y: scroll;
      transition:
        background-color 0.3s ease,
        color 0.3s ease;
    }

    body {
      margin: 0;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      background: url('../assets/images/y-so-white.png') repeat;
      color: var(--color-text-primary);
      font-weight: false;
      overflow: hidden;
      line-height: 1.65;
      transition:
        background-color 0.3s,
        color 0.3s;
    }

    footer {
      background-color: var(--color-bg-dark);
      color: var(--color-text-secondary);
      padding: 2rem;
      text-align: center;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      color: var(--color-text-primary);
      margin-bottom: 1rem;
      font-family: 'Varela', 'Open Sans', sans-serif;
      font-weight: true;
      line-height: 1.2;
    }

    h1,
    h2 {
      text-align: center;
    }

    p {
      /* line-height: 1.6; */
      color: var(--color-text-primary);
      font-size: 1.15rem;
    }

    h1 {
      font-weight: 700;
      margin-top: 0;
      font-size: 2.5rem;
    }

    h2 {
      font-size: 2.44rem;
    }

    h3 {
      font-size: 1.95rem;
    }

    h4 {
      font-size: 1.56rem;
    }

    h5 {
      font-size: 1.25rem;
    }

    .text-caption {
      font-size: 0.8rem;
    }

    small {
      font-size: 0.64rem;
    }

    button {
      background-color: var(--color-accent);
      border: none;
      padding: 10px 20px;
      border-radius: 8px;
      box-shadow: var(--shadow-soft);
      cursor: pointer;
      transition:
        background-color 0.3s ease,
        transform 0.2s ease;
    }

    button:hover {
      background-color: var(--color-accent-hover);
      transform: translateY(-2px);
      box-shadow: var(--shadow-hover);
    }

    .card {
      background-color: var(--color-bg-secondary);
      border-radius: 12px;
      box-shadow: var(--shadow-soft);
      padding: 1.5rem;
      transition: box-shadow 0.3s ease;
    }

    .card:hover {
      box-shadow: var(--shadow-hover);
    }

    input,
    select {
      border: 1px solid var(--color-border-color);
      border-radius: 6px;
      padding: 0.5rem 1rem;
      font-size: 1rem;
      width: 100%;
      background-color: var(--color-bg-secondary);
      color: var(--color-text-primary);
    }

    input:focus,
    select:focus {
      border-color: var(--color-accent);
      outline: none;
      box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.3);
    }

    .checkbox-options {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;
    }

    .checkbox-options input[type='checkbox'] {
      appearance: none;
      width: 20px;
      height: 20px;
      border: 2px solid var(--color-accent);
      border-radius: 4px;
      background-color: var(--color-bg-secondary);
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition:
        background-color 0.3s ease,
        border-color 0.3s ease;
    }

    .checkbox-options input[type='checkbox']:checked {
      background-color: var(--color-accent);
      border-color: var(--color-accent);
    }

    .checkbox-options input[type='checkbox']:checked::before {
      content: '✔';
      color: white;
      font-size: 0.9rem;
    }

    .checkbox-options label {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      color: var(--color-text-primary);
      cursor: pointer;
    }

    .dark-mode body {
      background: url('../assets/images/y-so-dark.png') repeat;
      color: var(--color-text-primary);
    }

    .dark-mode footer {
      background-color: var(--color-bg-dark);
    }

    .dark-mode button {
      background-color: var(--color-accent);
      color: white;
    }

    .dark-mode .card {
      background-color: var(--color-bg-secondary);
      color: var(--color-text-primary);
    }

    .dark-mode input,
    .dark-mode select {
      background-color: var(--color-bg-secondary);
      color: var(--color-text-primary);
      border-color: var(--color-border-color);
    }

    .dark-mode input:focus,
    .dark-mode select:focus {
      border-color: var(--color-accent);
      box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.3);
    }
  </style>
</html>
