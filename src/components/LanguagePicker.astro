---
import { languages } from '../i18n/ui';
import { getLangFromUrl } from '../i18n/utils';

// Convert the URL string to a URL object
const currentUrl = new URL(Astro.request.url);

// Extract the current language from the pathname (first segment)
const currentLang = currentUrl.pathname.split('/')[1] || 'en';

// Use the URL object to retrieve the language using the utility function
const lang = getLangFromUrl(currentUrl);
const langLabel = languages[lang] || languages['en'];
---
<div class="language-picker">
  <button id="language-toggle" class="language-toggle" aria-haspopup="listbox">
    <svg class="icon" viewBox="0 0 16 16" fill="#ffffff">
      <path d="M8,0C3.6,0,0,3.6,0,8s3.6,8,8,8s8-3.6,8-8S12.4,0,8,0z M13.9,7H12c-0.1-1.5-0.4-2.9-0.8-4.1 C12.6,3.8,13.6,5.3,13.9,7z M8,14c-0.6,0-1.8-1.9-2-5H10C9.8,12.1,8.6,14,8,14z M6,7c0.2-3.1,1.3-5,2-5s1.8,1.9,2,5H6z M4.9,2.9 C4.4,4.1,4.1,5.5,4,7H2.1C2.4,5.3,3.4,3.8,4.9,2.9z M2.1,9H4c0.1,1.5,0.4,2.9,0.8,4.1C3.4,12.2,2.4,10.7,2.1,9z M11.1,13.1 c0.5-1.2,0.7-2.6,0.8-4.1h1.9C13.6,10.7,12.6,12.2,11.1,13.1z" />
    </svg>
    {langLabel}
  </button>
  <ul id="language-list" class="language-list" role="listbox">
    {Object.entries(languages).map(([langCode, label]) => (
      <li
        class="language-item"
        data-lang={langCode}
        role="option"
        aria-selected={langCode === currentLang ? 'true' : 'false'}
      >
        <svg class="icon language-icon" viewBox="0 0 16 16">
          <path d="M8,0C3.6,0,0,3.6,0,8s3.6,8,8,8s8-3.6,8-8S12.4,0,8,0z M13.9,7H12c-0.1-1.5-0.4-2.9-0.8-4.1 C12.6,3.8,13.6,5.3,13.9,7z M8,14c-0.6,0-1.8-1.9-2-5H10C9.8,12.1,8.6,14,8,14z M6,7c0.2-3.1,1.3-5,2-5s1.8,1.9,2,5H6z M4.9,2.9 C4.4,4.1,4.1,5.5,4,7H2.1C2.4,5.3,3.4,3.8,4.9,2.9z M2.1,9H4c0.1,1.5,0.4,2.9,0.8,4.1C3.4,12.2,2.4,10.7,2.1,9z M11.1,13.1 c0.5-1.2,0.7-2.6,0.8-4.1h1.9C13.6,10.7,12.6,12.2,11.1,13.1z" />
        </svg>
        {label}
      </li>
    ))}
  </ul>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const languagePicker = document.querySelector('.language-picker');
    const toggleButton = languagePicker.querySelector('#language-toggle');
    const languageList = languagePicker.querySelector('#language-list');

    // Toggle the visibility of the language list when clicking the button
    toggleButton.addEventListener('click', () => {
      languageList.classList.toggle('visible');
    });

    // Update the URL with the selected language when clicking on a language item
    languageList.addEventListener('click', event => {
      const target = event.target.closest('.language-item');
      if (target) {
        const selectedLang = target.dataset.lang;
        const currentPath = window.location.pathname.split('/').filter(Boolean);
        currentPath[0] = selectedLang;
        window.location.href = '/' + currentPath.join('/');
      }
    });

    // Close the language list if the click occurs outside the language picker
    document.addEventListener('click', event => {
      if (!languagePicker.contains(event.target)) {
        languageList.classList.remove('visible');
      }
    });
  });
</script>

<style>
  .language-picker {
    position: relative;
  }

  .language-toggle {
    display: flex;
    align-items: center;
    gap: 6px;
    padding: 0.5rem 1rem;
  }

  .language-list {
    position: absolute;
    top: 110%;
    left: 0;
    background: #3a6ea5;
    border-radius: 8px;
    list-style: none;
    margin: 0;
    padding: 0;
    z-index: 10;
    opacity: 0;
    transform: translateY(-10px);
    visibility: hidden;
    transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s;
  }

  .language-list.visible {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
  }

  .language-item {
    display: flex;
    align-items: center;
    color: #ffffff;
    gap: 8px;
    padding: 8px 16px;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .language-item:hover {
    background-color: var(--color-accent-hover);
  }

  .icon {
    width: 16px;
    height: 16px;
    fill: #ffffff;
  }
</style>
